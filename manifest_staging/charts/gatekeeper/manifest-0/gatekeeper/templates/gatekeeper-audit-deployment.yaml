---
# Source: gatekeeper/templates/gatekeeper-audit-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: 'gatekeeper'
    chart: 'gatekeeper'
    control-plane: audit-controller
    gatekeeper.sh/operation: audit
    gatekeeper.sh/system: "yes"
    heritage: 'Helm'
    release: 'gatekeeper'
  name: gatekeeper-audit
  namespace: 'default'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: 'gatekeeper'
      chart: 'gatekeeper'
      control-plane: audit-controller
      gatekeeper.sh/operation: audit
      gatekeeper.sh/system: "yes"
      heritage: 'Helm'
      release: 'gatekeeper'
  template:
    metadata:
      annotations:
      labels:
        app: 'gatekeeper'
        chart: 'gatekeeper'
        control-plane: audit-controller
        gatekeeper.sh/operation: audit
        gatekeeper.sh/system: "yes"
        heritage: 'Helm'
        release: 'gatekeeper'
    spec:
      affinity:
        {}
      automountServiceAccountToken: true
      containers:
      -
        image: openpolicyagent/gatekeeper:v3.10.0-beta.0
        args:
        - --audit-interval=60
        - --log-level=INFO
        - --constraint-violations-limit=20
        - --audit-from-cache=false
        - --audit-chunk-size=500
        - --audit-match-kind-only=false
        - --emit-audit-events=false
        - --operation=audit
        - --operation=status
        - --operation=mutation-status
        - --logtostderr
        - --health-addr=:9090
        - --prometheus-port=8888
        - --enable-external-data=false
        - --metrics-backend=prometheus
        - --disable-cert-rotation=true
        command:
        - /manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CONTAINER_NAME
          value: manager
        imagePullPolicy: 'IfNotPresent'
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9090
        name: manager
        ports:
        - containerPort: 8888
          name: metrics
          protocol: TCP
        - containerPort: 9090
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 9090
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
        securityContext:
          seccompProfile:
            type: RuntimeDefault
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          readOnlyRootFilesystem: true
          runAsGroup: 999
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        - mountPath: /certs
          name: cert
          readOnly: true
        - mountPath: /tmp/audit
          name: tmp-volume
      dnsPolicy: ClusterFirst
      hostNetwork: false
      imagePullSecrets:
        []
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName:  system-cluster-critical
      securityContext:
        fsGroup: 999
        supplementalGroups:
        - 999
      serviceAccountName: gatekeeper-admin
      terminationGracePeriodSeconds: 60
      tolerations:
        []
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: gatekeeper-webhook-server-cert
      - emptyDir: {}
        name: tmp-volume
